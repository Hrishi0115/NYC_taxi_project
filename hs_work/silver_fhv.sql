CREATE OR REPLACE TABLE ADF_TEST.ADF_PRE_SILVER.PRE_FHV AS 
SELECT
  $1:dispatching_base_num::STRING AS DISPATCHING_BASE_NUM,
  $1:dropOff_datetime::STRING AS DROPOFF_DATETIME,
  $1:pickup_datetime::STRING AS PICKUP_DATETIME,
  $1:DOlocationID::INT AS DOLOCATIONID,
  $1:PUlocationID::INT AS PULOCATIONID,
  $1:SR_Flag::INT AS SR_FLAG
FROM ADF_TEST.ADF_LANDING.FHV_IN;

CREATE OR REPLACE TABLE ADF_TEST.ADF_SILVER.FHV AS
SELECT
    ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS ID, -- Generates a unique ID for each row
    dispatching_base_num AS DISPATCHING_BASE_NUMBER,
    CASE WHEN YEAR(TO_DATE(DROPOFF_DATETIME)) > 2017 THEN TO_DATE(DROPOFF_DATETIME) ELSE NULL END AS DROPOFF_DATE,
    TO_TIME(DROPOFF_DATETIME) AS DROPOFF_TIME,
    CASE WHEN YEAR(TO_DATE(PICKUP_DATETIME)) > 2017 THEN TO_DATE(PICKUP_DATETIME) ELSE NULL END AS PICKUP_DATE,
    TO_TIME(PICKUP_DATETIME) AS PICKUP_TIME,
    COALESCE(NULLIF(DOLOCATIONID, 0), 264) AS DOLOCATIONID,
    COALESCE(NULLIF(PULOCATIONID, 0), 264) AS PULOCATIONID,
    COALESCE(SR_FLAG, 0) AS SR_FLAG
FROM ADF_TEST.ADF_PRE_SILVER.PRE_FHV;

select * from ADF_TEST.ADF_SILVER.FHV WHERE YEAR(DROPOFF_DATE) != 2020 limit 100;

select * from ADF_TEST.ADF_SILVER.FHV order by pickup_date desc limit 100;