CREATE OR REPLACE TABLE ADF_TEST.ADF_PRE_SILVER.PRE_GREEN
AS 
SELECT
  $1:DOLocationID::int as DOLocationID,
  $1:PULocationID::int as PULocationID,
  $1:RatecodeID::int as RatecodeID,
  $1:VendorID::int as VendorID,
  $1:extra::float as extra,
  $1:fare_amount::float as fare_amount,
  $1:improvement_surcharge::float as improvement_surcharge,
  $1:lpep_dropoff_datetime::string as lpep_dropoff_datetime,
  $1:lpep_pickup_datetime::string as lpep_pickup_datetime,
  $1:mta_tax::float as mta_tax,
  $1:passenger_count::int as passenger_count,
  $1:payment_type::int as payment_type,
  $1:store_and_fwd_flag::string as store_and_fwd_flag,
  $1:tip_amount::float as tip_amount,
  $1:tolls_amount::float as tolls_amount,
  $1:total_amount::float as total_amount,
  $1:trip_distance::float as trip_distance,
  $1:trip_type::int as trip_type
FROM ADF_TEST.ADF_LANDING.GREEN_IN;
;

CREATE OR REPLACE TABLE ADF_TEST.ADF_SILVER.GREEN AS
SELECT
    ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS ID,
    CASE WHEN DOLOCATIONID < 1 OR DOLOCATIONID > 265 THEN 264 ELSE DOLOCATIONID END AS DOLOCATIONID,
    CASE WHEN PULOCATIONID NOT BETWEEN 1 AND 265 THEN 264 ELSE PULOCATIONID END AS PULOCATIONID,
    CASE WHEN RATECODEID NOT BETWEEN 1 AND 6 THEN 7 ELSE RATECODEID END AS RATECODEID,
    CASE WHEN VENDORID NOT BETWEEN 1 AND 2 THEN 3 ELSE VENDORID END AS VENDORID,
    CASE WHEN EXTRA NOT IN (0, 0.5, 1, 4.5, 2.75, -0.5, -1, -2.75, -4.75) THEN NULL WHEN EXTRA < 0 THEN EXTRA * -1 ELSE EXTRA END AS EXTRA,
    CASE WHEN FARE_AMOUNT > 500 OR FARE_AMOUNT < -500 THEN NULL WHEN FARE_AMOUNT BETWEEN -500 AND 0 THEN FARE_AMOUNT * -1 ELSE FARE_AMOUNT END AS FARE_AMOUNT,
    CASE WHEN IMPROVEMENT_SURCHARGE NOT IN (-0.3, 0, 0.3) THEN NULL WHEN IMPROVEMENT_SURCHARGE = -0.3 THEN IMPROVEMENT_SURCHARGE * -1 ELSE IMPROVEMENT_SURCHARGE END AS IMPROVEMENT_SURCHARGE,
    CASE WHEN MTA_TAX NOT IN (-0.5, 0, 0.5) THEN NULL WHEN MTA_TAX = -0.5 THEN MTA_TAX * -1 ELSE MTA_TAX END AS MTA_TAX,
    CASE WHEN PASSENGER_COUNT NOT BETWEEN 0 AND 6 THEN NULL ELSE PASSENGER_COUNT END AS PASSENGER_COUNT,
    CASE WHEN PAYMENT_TYPE NOT BETWEEN 1 AND 6 THEN 5 ELSE PAYMENT_TYPE END AS PAYMENT_TYPE,
    CASE WHEN UPPER(STORE_AND_FWD_FLAG) NOT IN ('Y', 'N') THEN 'U' ELSE UPPER(STORE_AND_FWD_FLAG) END AS STORE_AND_FWD_FLAG,
    TIP_AMOUNT,
    CASE WHEN ABS(TOLLS_AMOUNT) > 120 THEN NULL ELSE ABS(TOLLS_AMOUNT) END AS TOLLS_AMOUNT,
    CASE WHEN YEAR(TO_DATE(LPEP_DROPOFF_DATETIME)) BETWEEN 2018 AND 2024 THEN TO_DATE(LPEP_DROPOFF_DATETIME) ELSE NULL END AS LPEP_DROPOFF_DATE,
    TO_TIME(LPEP_DROPOFF_DATETIME) AS LPEP_DROPOFF_TIME,
    CASE WHEN YEAR(TO_DATE(LPEP_PICKUP_DATETIME)) BETWEEN 2018 AND 2024 THEN TO_DATE(LPEP_PICKUP_DATETIME) ELSE NULL END AS LPEP_PICKUP_DATE,
    TO_TIME(LPEP_PICKUP_DATETIME) AS LPEP_PICKUP_TIME,
    CASE WHEN ABS(TRIP_DISTANCE) > 200 THEN NULL ELSE ABS(TRIP_DISTANCE) END AS TRIP_DISTANCE,
    CASE WHEN TRIP_TYPE NOT IN (1, 2) THEN 3 ELSE TRIP_TYPE END AS TRIP_TYPE,
    FARE_AMOUNT + COALESCE(EXTRA, 0) + COALESCE(IMPROVEMENT_SURCHARGE, 0) + COALESCE(MTA_TAX, 0) + COALESCE(TIP_AMOUNT, 0) + COALESCE(TOLLS_AMOUNT, 0) AS TOTAL_AMOUNT
FROM
    ADF_TEST.ADF_PRE_SILVER.PRE_GREEN;

SELECT * FROM ADF_TEST.ADF_SILVER.GREEN LIMIT 5;